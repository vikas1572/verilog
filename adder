module fulladder(sum,carry,a,b,c);
input(a,b,c);
output(sum,carry);
wire(x,y,z);
xor(sum,a,b,c);
and(x,a,b);
and(y,a,c);
and(z,b,c);
or(carry,x,y,z);
end module





module fulladder(sum,carry,a,b,c);
input(a,b,c);
wire(x,y,z);
output(sum,carry);
assign sum=a^b;
assign x=a&b;
assign y=a&c;
assign z=b&c;
assign carry=x|y|c;
endmodule





`timescale 10 ns / 10 ps
module tb_fulladder;
  reg a;
  reg b;
  reg c;
  wire sum;
  wire carry;
  fulladder uut(
    .a(a),
    .b(b),
    .c(c),
    .sum(sum),
    .carry(carry)
  );
  initial begin
      $dumpfile("dump.vcd"); 
      $dumpvars;
  end
  initial begin
    a=0;
    b=0;
    c=0;
    #5;
    a=0;
    b=0;
    c=1;
    #5;
    a=0;
    b=1;
    c=0;
    #5;
    a=0;
    b=1;
    c=1;
    #5;
    a=1;
    b=0;
    c=0;
    #5;
    a=1;
    b=0;
    c=1;
    #5; 
    a=1;
    b=1;
    c=0;
    #5;
    a=1;
    b=1;
    c=1;
    #5;
    $finish();
  end
endmodule
